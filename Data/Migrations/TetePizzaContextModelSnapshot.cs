// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TetePizza.Data;

#nullable disable

namespace TetePizza.Data.Migrations
{
    [DbContext(typeof(TetePizzaContext))]
    partial class TetePizzaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TetePizza.Model.Ingredientes", b =>
                {
                    b.Property<int>("idIngrediente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idIngrediente"));

                    b.Property<bool>("IsGlutenFree")
                        .HasColumnType("bit");

                    b.Property<int?>("PizzaidPizza")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<string>("nombreIngrediente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("precio")
                        .HasColumnType("float");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idIngrediente");

                    b.HasIndex("PizzaidPizza");

                    b.ToTable("Ingredientes");

                    b.HasData(
                        new
                        {
                            idIngrediente = 1,
                            IsGlutenFree = true,
                            cantidad = 2,
                            nombreIngrediente = "Tomate",
                            precio = 0.22,
                            tipo = "Fruta"
                        },
                        new
                        {
                            idIngrediente = 2,
                            IsGlutenFree = false,
                            cantidad = 3,
                            nombreIngrediente = "Prosciutto",
                            precio = 1.3,
                            tipo = "Carne"
                        },
                        new
                        {
                            idIngrediente = 3,
                            IsGlutenFree = true,
                            cantidad = 4,
                            nombreIngrediente = "Queso Parmesano",
                            precio = 2.5,
                            tipo = "Lácteo"
                        },
                        new
                        {
                            idIngrediente = 4,
                            IsGlutenFree = true,
                            cantidad = 1,
                            nombreIngrediente = "Aceite de Oliva",
                            precio = 3.0,
                            tipo = "Condimento"
                        },
                        new
                        {
                            idIngrediente = 5,
                            IsGlutenFree = true,
                            cantidad = 2,
                            nombreIngrediente = "Tomate",
                            precio = 0.22,
                            tipo = "Fruta"
                        },
                        new
                        {
                            idIngrediente = 6,
                            IsGlutenFree = true,
                            cantidad = 1,
                            nombreIngrediente = "Espinaca",
                            precio = 0.29999999999999999,
                            tipo = "Vegetal"
                        },
                        new
                        {
                            idIngrediente = 7,
                            IsGlutenFree = true,
                            cantidad = 2,
                            nombreIngrediente = "Champiñones",
                            precio = 0.25,
                            tipo = "Hongos"
                        },
                        new
                        {
                            idIngrediente = 8,
                            IsGlutenFree = true,
                            cantidad = 2,
                            nombreIngrediente = "Tomate",
                            precio = 0.22,
                            tipo = "Fruta"
                        },
                        new
                        {
                            idIngrediente = 9,
                            IsGlutenFree = false,
                            cantidad = 3,
                            nombreIngrediente = "Pepperoni",
                            precio = 1.5,
                            tipo = "Carne"
                        },
                        new
                        {
                            idIngrediente = 10,
                            IsGlutenFree = true,
                            cantidad = 1,
                            nombreIngrediente = "Oregano",
                            precio = 0.10000000000000001,
                            tipo = "Hierba"
                        },
                        new
                        {
                            idIngrediente = 11,
                            IsGlutenFree = true,
                            cantidad = 2,
                            nombreIngrediente = "Tomate",
                            precio = 0.22,
                            tipo = "Fruta"
                        },
                        new
                        {
                            idIngrediente = 12,
                            IsGlutenFree = true,
                            cantidad = 3,
                            nombreIngrediente = "Queso Mozzarella",
                            precio = 2.0,
                            tipo = "Lácteo"
                        },
                        new
                        {
                            idIngrediente = 13,
                            IsGlutenFree = true,
                            cantidad = 2,
                            nombreIngrediente = "Queso Cheddar",
                            precio = 1.5,
                            tipo = "Lácteo"
                        },
                        new
                        {
                            idIngrediente = 14,
                            IsGlutenFree = true,
                            cantidad = 2,
                            nombreIngrediente = "Queso Gouda",
                            precio = 1.8,
                            tipo = "Lácteo"
                        },
                        new
                        {
                            idIngrediente = 15,
                            IsGlutenFree = true,
                            cantidad = 2,
                            nombreIngrediente = "Queso Brie",
                            precio = 2.2000000000000002,
                            tipo = "Lácteo"
                        },
                        new
                        {
                            idIngrediente = 16,
                            IsGlutenFree = true,
                            cantidad = 2,
                            nombreIngrediente = "Queso Roquefort",
                            precio = 3.5,
                            tipo = "Lácteo"
                        },
                        new
                        {
                            idIngrediente = 17,
                            IsGlutenFree = true,
                            cantidad = 2,
                            nombreIngrediente = "Queso Gruyere",
                            precio = 2.6000000000000001,
                            tipo = "Lácteo"
                        },
                        new
                        {
                            idIngrediente = 18,
                            IsGlutenFree = true,
                            cantidad = 2,
                            nombreIngrediente = "Queso Emmental",
                            precio = 2.2999999999999998,
                            tipo = "Lácteo"
                        });
                });

            modelBuilder.Entity("TetePizza.Model.Pedidos", b =>
                {
                    b.Property<int>("idPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPedido"));

                    b.Property<int?>("UseridUsuario")
                        .HasColumnType("int");

                    b.Property<double>("precioPedido")
                        .HasColumnType("float");

                    b.HasKey("idPedido");

                    b.HasIndex("UseridUsuario");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("TetePizza.Model.Pizza", b =>
                {
                    b.Property<int>("idPizza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPizza"));

                    b.Property<int?>("PedidosidPedido")
                        .HasColumnType("int");

                    b.Property<string>("nombrePizza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("precioPizza")
                        .HasColumnType("float");

                    b.HasKey("idPizza");

                    b.HasIndex("PedidosidPedido");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            idPizza = 1,
                            nombrePizza = "Clasica",
                            precioPizza = 13.1
                        },
                        new
                        {
                            idPizza = 2,
                            nombrePizza = "Veggie",
                            precioPizza = 7.7000000000000002
                        },
                        new
                        {
                            idPizza = 3,
                            nombrePizza = "Pepperoni",
                            precioPizza = 7.0
                        },
                        new
                        {
                            idPizza = 4,
                            nombrePizza = "Margarita",
                            precioPizza = 10.4
                        });
                });

            modelBuilder.Entity("TetePizza.Model.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idUsuario"));

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("TetePizza.Model.Ingredientes", b =>
                {
                    b.HasOne("TetePizza.Model.Pizza", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("PizzaidPizza");
                });

            modelBuilder.Entity("TetePizza.Model.Pedidos", b =>
                {
                    b.HasOne("TetePizza.Model.Usuario", "User")
                        .WithMany()
                        .HasForeignKey("UseridUsuario");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TetePizza.Model.Pizza", b =>
                {
                    b.HasOne("TetePizza.Model.Pedidos", null)
                        .WithMany("Pizzas")
                        .HasForeignKey("PedidosidPedido");
                });

            modelBuilder.Entity("TetePizza.Model.Pedidos", b =>
                {
                    b.Navigation("Pizzas");
                });

            modelBuilder.Entity("TetePizza.Model.Pizza", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
